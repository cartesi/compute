{% set players = num_players | int %}
{% if network is not defined or network == "localhost" %}
  {% set network = "localhost" %}
{% endif %}
{% import "config/"~network~".j2" as config %}

version: '3'
services:
{% if network == "localhost" %}
  hardhatnet:
    build:
      context: .
      dockerfile: ./deployer/Dockerfile
    environment:
      MNEMONIC: "{{ config.mnemonic() }}"
    expose:
      - {{ config.port() }}
    ports:
      - {{ config.port() }}:{{ config.port() }}
    volumes:
      - ./deployments/:/opt/cartesi/share/blockchain/deployments
    networks:
      - ethereum
{% endif %}
  
{% for i in range(players) %}
  dispatcher_{{ i }}:
    image: {{ image |default("cartesi/compute:local", true) }}
    restart: always
    environment:
      MNEMONIC: "{{ config.mnemonic() }}"
      ACCOUNT_INDEX: "{{ i }}"
      RUST_LOG: dispatcher=info,transaction=info,configuration=info,utils=info,state=info,cartesi_compute=info
      WEB3_PROVIDER_URI: {{ config.provider() }}
      DEPLOYMENT_SEMAPHORE: {{ config.semaphore() }}
      ETHEREUM_HOST: {{ config.host() }}
      ETHEREUM_PORT: {{ config.port() }}
      ETHEREUM_NETWORK: {{ network }}
      QUERY_PORT: 3001
      MACHINE_MANAGER_HOST: machine-manager
      MACHINE_MANAGER_PORT: 50051
      DOCKER: "TRUE"
      RUST_BACKTRACE: 1
    volumes:
{% if network == "localhost" %}
      # remove deployments mapping to use supported testnets' deployment info
      - ./deployments:/opt/cartesi/share/blockchain/deployments:ro
{% endif %}    
      - ./dapp_data_{{ i }}/flashdrive:/opt/cartesi/srv/compute/flashdrive
    networks:
      ethereum: {}
      node_{{ i }}:
        
        aliases:
          - dispatcher
    #ports:
    #  - "{{ 3001 + i }}:3001"

  machine_manager_{{ i }}:
    image: cartesi/machine-manager:master
    volumes:
      - ./machines:/opt/cartesi/srv/compute/cartesi-machine
      - ./dapp_data_{{ i }}/flashdrive:/opt/cartesi/srv/compute/flashdrive
    command: [ "./bin/machine-manager", "--address", "0.0.0.0", "--port", "50051","--port-checkin","50052"]

    environment:
      RUST_LOG: machine_manager_server=info
    networks:
      ethereum: {}
      node_{{ i }}:
        aliases:
          - machine-manager
{% endfor %}

volumes:
  {% for i in range(players) %}dapp_data_{{ i }}:
  {% endfor %}

networks:
  ethereum:
  {% for i in range(players) %}node_{{ i }}:
  {% endfor %}
